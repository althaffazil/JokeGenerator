name: Build & Deploy Docker Image

on:
  push:
    branches:
      - main
      - test
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Build and push docker image
        run: |
          docker compose -f docker-compose.yml build
          docker tag jokegenerator-web:latest ${{secrets.DOCKER_HUB_USERNAME}}/jokegenerator-web:latest
          docker push ${{secrets.DOCKER_HUB_USERNAME}}/jokegenerator-web:latest
          

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ~/ec2-key.pem
          chmod 600 ~/ec2-key.pem

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}

        run: |
          scp -o StrictHostKeyChecking=no -i ~/ec2-key.pem docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:~/docker-compose.yml
          ssh -o StrictHostKeyChecking=no -i ~/ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
          
          docker pull \$DOCKER_HUB_USERNAME/jokegenerator-web:latest
          docker compose up
          
          EOF
          



